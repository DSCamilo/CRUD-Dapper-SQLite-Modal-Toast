@page "/proyectos/{Id:int}"
@page "/proyectos/create"

@using FrontedProjectManagement.Models
@using FrontedProjectManagement.Services
@using Components

@inject IProyectosService _proyectosService
@inject IToastService ToastService
@inject NavigationManager Navigation

<div class="conteiner d-flex justify-content-center m-0 p-0">
    <EditForm Model="@proyecto" OnValidSubmit="@HandleOnValidSubmit" class="col-sm-12 col-md-10 col-lg-8 p-0">
        <DataAnnotationsValidator />

        <div class="card">

            <div class="card-header">
                <h3>ProjectApp - Detalle: @proyecto.Nombre_Proyecto</h3>
            </div>

            <div class="card-body">
                <div class="form-group">
                    <label for="name" class="form-label">Nombre proyecto</label>
                    <InputText id="name" @bind-Value="proyecto.Nombre_Proyecto" class="form-control" placeholder="Ingrese nombre proyecto" />
                    <ValidationMessage For="@(() => proyecto.Nombre_Proyecto)" />
                </div>

                <div class="form-group">
                    <label for="price" class="form-label">Valor proyecto</label>
                    <InputNumber id="price" @bind-Value="proyecto.Valor_Proyecto" class="form-control" placeholder="Valor proyecto" />
                    <ValidationMessage For="@(() => proyecto.Valor_Proyecto)" />
                </div>

                <div class="form-group">
                    <label for="description" class="form-label">Sector Proyecto</label>
                    <InputNumber id="description" @bind-Value="proyecto.Id_Sector" class="form-control" placeholder="Sector proyecto" rows="5"/>
                    <ValidationMessage For="@(() => proyecto.Id_Sector)" /> 
                </div>
            
                <br/>
                <div class="form-group">

                    <button type="submit" class="btn btn-primary btn-sm" hidden="@(Id == null)"><i class="fa fa-save pr-2" /> Guardar</button>
                    <button type="submit" class="btn btn-success btn-sm" hidden="@(Id != null)"><i class="fa fa-plus pr-2" /> Crear</button>
                    <a href="proyectos/fetchproyectos" class="btn btn-secondary btn-sm"><i class="fa fa-times pr-2" /> Cancelar</a>
                    <button type="button" class="btn btn-danger btn-sm float-end" hidden="@(Id == null)" @onclick="(async () => await ShowConfirmationModal())"><i class="fa fa-trash pr-2" /> Eliminar</button>
                </div>
            </div>

        </div>

    </EditForm>
</div>

@code{
    
    [Parameter]
    
    public int? Id {get;set;}
    public Proyectos proyecto = new Proyectos();
    [CascadingParameter] IModalService Modal {get; set;}

    protected override async Task OnInitializedAsync()
    {
        if(Id != null)
        {
            proyecto = await _proyectosService.GetProyectos(Id.Value);
        }
    }

    private async Task HandleOnValidSubmit()
    {
        try
        {
            if(Id != null)
                await _proyectosService.UpdateProyectos(Id.Value, proyecto);
            else
            {
                Proyectos newTool = await _proyectosService.CreateProyectos(proyecto);
                Navigation.NavigateTo($"/proyectos/{newTool.Id_Proyecto}");
            }

            ToastService.ShowSuccess("Se han guardado los datos correctamente","Buen trabajo!");
            Navigation.NavigateTo($"proyectos/fetchproyectos");
        }
        catch (System.Exception)
        {
            
            ToastService.ShowError("Se ha presentado un error al guardar los datos","Ops!");
        }
        
    }

    private async Task ShowConfirmationModal()
    {
        var parameters = new ModalParameters();
        parameters.Add("ToolId", Id);

        var confirmationModal = Modal.Show<ConfirmationModal>("Eliminar Proyecto?", parameters);
        var result = await confirmationModal.Result;

        if(!result.Cancelled)
        {
            ToastService.ShowSuccess("Se ha eliminado el proyecto!","Buen trabajo!");
            Navigation.NavigateTo($"proyectos/fetchproyectos");
        }

    }
}

